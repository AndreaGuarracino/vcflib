.\" Automatically generated by Pandoc 2.14.0.3
.\"
.TH "VCFCREATEMULTI" "1" "" "vcfcreatemulti (vcflib)" "vcfcreatemulti (VCF transformation)"
.hy
.SH NAME
.PP
vcfcreatemulti - collates single ALT allele records into multi-allele
records while tracking genotypes
.SH SYNOPSIS
.PP
\f[B]vcfcreatemulti\f[R]
.SH DESCRIPTION
.PP
\f[B]vcfcreatemulti\f[R] merges VCF records into one line by combining
ALT alleles into a single VCF record.
This tools is a great companion to vcfwave.
.PP
In 2022 \f[B]vcfcreatemulti\f[R] has been upgraded to track INFO records
and genotypes (samples) so they are updated in the output.
.PP
See below EXAMPLES and vcfwave for more information.
.SS Options
.TP
-h, \[en]help
shows help message and exits.
.PP
See more below.
.SH EXIT VALUES
.TP
\f[B]0\f[R]
Success
.TP
\f[B]not 0\f[R]
Failure
.SH EXAMPLES
.IP
.nf
\f[C]
>>> head(\[dq]vcfcreatemulti -h\[dq],25)
>
Usage: vcfcreatemulti [options] [file]
>
Go through sorted VCF and if overlapping alleles are represented
across multiple records, merge them into a single record.  Currently
only for indels.
>
options:
>
    --quiet           no progress bar
    --legacy          legacy mode (old C++ implementation does not do genotypes)
>
Type: transformation
>
\f[R]
.fi
.PP
THe original `legacy' vcfcreatemulti can combine overlapping alleles
onto one record (VCF line), but it does not correct the INFO fields and
sample (genotypes).
For example:
.IP
.nf
\f[C]
>>> sh(\[dq]cat ../samples/10158243-after-vcfwave.vcf|grep -v \[ha]\[rs]#\[dq])
grch38#chr4     10158244        >3655>3662_1    CCCCCACCCCCAC   C       60      .       AC=1;AF=0.011236;AN=89;AT=>3655>3656>3657>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=12;INV=0;TYPE=del        GT      0|0     0|0     0|0     0|0     1|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0
grch38#chr4     10158244        >3655>3662_2    CCCCCACCCCCACC  C       60      .       AC=3;AF=0.033708;AN=89;AT=>3655>3656>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=13;INV=0;TYPE=del     GT      0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     1|0     0|1     0|0     0|0     0|0     0|0     0|0     0|0     0|1     0|0     0
grch38#chr4     10158245        >3655>3662_3    CCCCACCCCCACC   C       60      .       AC=64;AF=0.719101;AN=89;AT=>3655>3656>3657>3658>3659>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=12;INV=0;TYPE=del     GT      0|0     1|1     1|1     1|0     0|1     0|0     0|1     0|1     1|1     1|1     1|1     1|1     1|1     1|1     1|1     0|0     1|1     1|1     1|1     1|0     1|0     1|0     1|0     1|1     1|1     1|0     1|1     1|1     0|0     1|0     1|1     0|1     1|1     1|1     0|1     1|0     1|1     1|1     0|1     1|1     1|1     1|0     1|0     1|1     0
grch38#chr4     10158251        >3655>3662_4    CCCCACC C       60      .       AC=3;AF=0.033708;AN=89;AT=>3655>3656>3657>3658>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=6;INV=0;TYPE=del    GT      0|0     0|0     0|0     0|0     0|0     0|1     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     1|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|1     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0
grch38#chr4     10158256        >3655>3662_5    CC      C       60      .       AC=2;AF=0.022472;AN=89;AT=>3655>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=1;INV=0;TYPE=del   GT      0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|1     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     1|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0
grch38#chr4     10158257        >3655>3662_6    C       A       60      .       AC=1;AF=0.011236;AN=89;AT=>3655>3656>3657>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=1;INV=0;TYPE=snp GT      0|0     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     .|.     0
\f[R]
.fi
.PP
now gets converted into the following:
.IP
.nf
\f[C]
>>> sh(\[dq]../build/vcfcreatemulti ../samples/10158243-after-vcfwave.vcf|grep -v \[ha]\[rs]#\[dq])
grch38#chr4     10158244        >3655>3662_1    CCCCCACCCCCACC  CC,C,CC,CCCCCACC,CCCCCACCCCCAC,CCCCCACCCCCACA   60      .       AC=1,3,64,3,2,1;AF=0.011236,0.033708,0.719101,0.033708,0.022472,0.011236;AN=89,89,89,89,89,89;AT=>3655>3656>3657>3660>3662,>3655>3656>3660>3662,>3655>3656>3657>3658>3659>3660>3662,>3655>3656>3657>3658>3660>3662,>3655>3660>3662,>3655>3656>3657>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=12;INV=0,0,0,0,0,0;TYPE=del,del,del,del,del,snp;combined=10158244-10158257      GT      0|0     3|3     3|3     3|0     1|3     0|4     0|3     0|3     3|3     3|3     3|3     3|3     3|3     3|3     3|3     4|5     3|3     3|3     3|3     3|0     3|0     3|0     3|0     3|3     3|3     3|4     3|3     3|3     5|0     3|0     3|3     0|3     3|3     3|3     2|3     3|2     3|3     3|3     0|3     3|3     3|3     3|0     3|2     3|3     0
\f[R]
.fi
.SH ./vcfcreatemulti ../samples/grch38#chr8_36353854-36453166.vcf > ../test/data/regression/vcfcreatemulti_2.vcf
.RS
.RS
.RS
.PP
run_stdout(\[lq]vcfcreatemulti
\&../samples/grch38#chr8_36353854-36453166-bcftools-normalised.vcf\[rq],
ext=\[lq]vcf\[rq], uniq=2) output in vcfcreatemulti_2.vcf
.RE
.RE
.RE
.RS
.RS
.RS
.PP
run_stdout(\[lq]vcfcreatemulti ../samples/sample.vcf\[rq],
ext=\[lq]vcf\[rq], uniq=3) output in vcfcreatemulti_3.vcf
.RE
.RE
.RE
.IP
.nf
\f[C]
Check if the legacy version is still the same. Note it only retains the first genotype and has duplicate \[aq]CC\[aq] alt alleles. INFO fields are not correct either.

\[ga]\[ga]\[ga]python
>>> sh(\[dq]../build/vcfcreatemulti --legacy ../samples/10158243-after-vcfwave.vcf|grep -v \[ha]\[rs]#\[dq])
grch38#chr4     10158244        >3655>3662_1    CCCCCACCCCCACC  CC,C,CC,CCCCCACC,CCCCCACCCCCAC,CCCCCACCCCCACA   60      .       AC=1;AF=0.011236;AN=89;AT=>3655>3656>3657>3660>3662;NS=45;LV=0;ORIGIN=grch38#chr4:10158243;LEN=12;INV=0;TYPE=del;combined=10158244-10158257     GT      0|0     0|0     0|0     0|0     1|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0|0     0
\f[R]
.fi
.SS Trouble shooting
.PP
If you get an error like
.IP
.nf
\f[C]
thread 502 panic: attempt to unwrap error: MultiAltNotSupported
\f[R]
.fi
.PP
It means the input file already contains multi-allele VCF records.
To split these you can run a command such as \f[C]bcftools norm -m-\f[R]
to normalise the VCF records and split out multiple ALT alleles into
separate VCF records.
Finally use \f[B]vcfcreatemulti\f[R] to create multi-allele VCF records
again.
.SH LICENSE
.PP
Copyright 2022 (C) Erik Garrison, Pjotr Prins and vcflib contributors.
MIT licensed.
.SH AUTHORS
Erik Garrison, Pjotr Prins and other vcflib contributors.
